{"version":3,"file":"users.js","sourceRoot":"","sources":["../../src/users.ts"],"names":[],"mappings":";AAyGA,YAAY","sourcesContent":["/**\r\n * ```ts\r\n * import type { ArangoUser } from \"arangojs/users\";\r\n * ```\r\n *\r\n * The \"users\" module provides types for ArangoDB users.\r\n *\r\n * @packageDocumentation\r\n */\r\nimport * as collections from \"./collections.js\";\r\nimport * as databases from \"./databases.js\";\r\n\r\n//#region Shared types\r\n/**\r\n * Access level for an ArangoDB user's access to a collection or database.\r\n */\r\nexport type AccessLevel = \"rw\" | \"ro\" | \"none\";\r\n//#endregion\r\n\r\n//#region User operation options\r\n/**\r\n * Options for modifying an ArangoDB user.\r\n */\r\nexport type UserOptions = {\r\n  /**\r\n   * Password the ArangoDB user will use for authentication.\r\n   */\r\n  passwd: string;\r\n  /**\r\n   * Whether the ArangoDB user account is enabled and can authenticate.\r\n   *\r\n   * Default: `true`\r\n   */\r\n  active?: boolean;\r\n  /**\r\n   * Additional information to store about this user.\r\n   *\r\n   * Default: `{}`\r\n   */\r\n  extra?: Record<string, any>;\r\n};\r\n\r\n/**\r\n * Options for accessing or manipulating access levels.\r\n */\r\nexport type UserAccessLevelOptions = {\r\n  /**\r\n   * The database to access or manipulate the access level of.\r\n   *\r\n   * If `collection` is an `ArangoCollection`, this option defaults to the\r\n   * database the collection is contained in. Otherwise this option defaults to\r\n   * the current database.\r\n   */\r\n  database?: databases.Database | string;\r\n  /**\r\n   * The collection to access or manipulate the access level of.\r\n   */\r\n  collection?: collections.ArangoCollection | string;\r\n};\r\n\r\n/**\r\n * Database user to create with a database.\r\n */\r\nexport type CreateDatabaseUserOptions = {\r\n  /**\r\n   * Username of the user to create.\r\n   */\r\n  username: string;\r\n  /**\r\n   * Password of the user to create.\r\n   *\r\n   * Default: `\"\"`\r\n   */\r\n  passwd?: string;\r\n  /**\r\n   * Whether the user is active.\r\n   *\r\n   * Default: `true`\r\n   */\r\n  active?: boolean;\r\n  /**\r\n   * Additional data to store with the user object.\r\n   */\r\n  extra?: Record<string, any>;\r\n};\r\n//#endregion\r\n\r\n//#region User operation results\r\n/**\r\n * Properties of an ArangoDB user object.\r\n */\r\nexport type ArangoUser = {\r\n  /**\r\n   * ArangoDB username of the user.\r\n   */\r\n  user: string;\r\n  /**\r\n   * Whether the ArangoDB user account is enabled and can authenticate.\r\n   */\r\n  active: boolean;\r\n  /**\r\n   * Additional information to store about this user.\r\n   */\r\n  extra: Record<string, any>;\r\n};\r\n//#endregion\r\n"]}