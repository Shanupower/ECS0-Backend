{"version":3,"file":"logs.js","sourceRoot":"","sources":["../../src/logs.ts"],"names":[],"mappings":";AAAA;;;;;;;;GAQG;;;AAEH,sBAAsB;AACtB;;GAEG;AACH,IAAY,QAMX;AAND,WAAY,QAAQ;IAClB,yCAAK,CAAA;IACL,yCAAK,CAAA;IACL,6CAAO,CAAA;IACP,uCAAI,CAAA;IACJ,yCAAK,CAAA;AACP,CAAC,EANW,QAAQ,wBAAR,QAAQ,QAMnB;AAmFD,YAAY","sourcesContent":["/**\r\n * ```ts\r\n * import type { LogLevel } from \"arangojs/logs\";\r\n * ```\r\n *\r\n * The \"logs\" module provides types for ArangoDB logs.\r\n *\r\n * @packageDocumentation\r\n */\r\n\r\n//#region Shared types\r\n/**\r\n * Numeric representation of the logging level of a log entry.\r\n */\r\nexport enum LogLevel {\r\n  FATAL,\r\n  ERROR,\r\n  WARNING,\r\n  INFO,\r\n  DEBUG,\r\n}\r\n\r\n/**\r\n * String representation of the logging level of a log entry.\r\n */\r\nexport type LogLevelLabel = keyof typeof LogLevel;\r\n\r\n/**\r\n * Logging level setting.\r\n */\r\nexport type LogLevelSetting = LogLevelLabel | \"DEFAULT\";\r\n\r\n/**\r\n * Log sorting direction, ascending or descending.\r\n */\r\nexport type LogSortDirection = \"asc\" | \"desc\";\r\n//#endregion\r\n\r\n//#region Log operation options\r\n/**\r\n * Options for retrieving log entries.\r\n */\r\nexport type LogEntriesOptions = {\r\n  /**\r\n   * Maximum log level of the entries to retrieve.\r\n   *\r\n   * Default: `INFO`.\r\n   */\r\n  upto?: LogLevel | LogLevelLabel | Lowercase<LogLevelLabel>;\r\n  /**\r\n   * If set, only log entries with this log level will be returned.\r\n   */\r\n  level?: LogLevel | LogLevelLabel | Lowercase<LogLevelLabel>;\r\n  /**\r\n   * If set, only log entries with an `lid` greater than or equal to this value\r\n   * will be returned.\r\n   */\r\n  start?: number;\r\n  /**\r\n   * If set, only this many entries will be returned.\r\n   */\r\n  size?: number;\r\n  /**\r\n   * If set, this many log entries will be skipped.\r\n   */\r\n  offset?: number;\r\n  /**\r\n   * If set, only log entries containing the specified text will be returned.\r\n   */\r\n  search?: string;\r\n  /**\r\n   * If set to `\"desc\"`, log entries will be returned in reverse chronological\r\n   * order.\r\n   *\r\n   * Default: `\"asc\"`.\r\n   */\r\n  sort?: LogSortDirection;\r\n};\r\n//#endregion\r\n\r\n//#region Log operation results\r\n/**\r\n * An object representing a single log entry.\r\n */\r\nexport type LogMessage = {\r\n  id: number;\r\n  topic: string;\r\n  level: LogLevelLabel;\r\n  date: string;\r\n  message: string;\r\n};\r\n\r\n/**\r\n * An object representing a list of log entries.\r\n */\r\nexport type LogEntries = {\r\n  totalAmount: number;\r\n  lid: number[];\r\n  topic: string[];\r\n  level: LogLevel[];\r\n  timestamp: number[];\r\n  text: string[];\r\n};\r\n//#endregion\r\n"]}