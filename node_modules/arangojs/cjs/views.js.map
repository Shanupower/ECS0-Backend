{"version":3,"file":"views.js","sourceRoot":"","sources":["../../src/views.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * ```ts\r\n * import type { ArangoSearchView } from \"arangojs/views\";\r\n * ```\r\n *\r\n * The \"views\" module provides View related types and interfaces for\r\n * TypeScript.\r\n *\r\n * @packageDocumentation\r\n */\r\nimport * as connections from \"./connection.js\";\r\nimport * as databases from \"./databases.js\";\r\nimport * as errors from \"./errors.js\";\r\nimport { VIEW_NOT_FOUND } from \"./lib/codes.js\";\r\n\r\n//#region Shared types\r\n/**\r\n * Sorting direction. Descending or ascending.\r\n */\r\nexport type Direction = \"desc\" | \"asc\";\r\n\r\n/**\r\n * Compression for storing data.\r\n */\r\nexport type Compression = \"lz4\" | \"none\";\r\n\r\n/**\r\n * Policy to consolidate based on segment byte size and live document count as\r\n * dictated by the customization attributes.\r\n *\r\n * @deprecated The `bytes_accum` consolidation policy was deprecated in\r\n * ArangoDB 3.7 and should be replaced with the `tier` consolidation policy.\r\n */\r\nexport type BytesAccumConsolidationPolicy = {\r\n  /**\r\n   * Type of consolidation policy.\r\n   */\r\n  type: \"bytes_accum\";\r\n  /**\r\n   * Must be in the range of `0.0` to `1.0`.\r\n   */\r\n  threshold?: number;\r\n};\r\n\r\n/**\r\n * Policy to consolidate if the sum of all candidate segment byte size is less\r\n * than the total segment byte size multiplied by a given threshold.\r\n */\r\nexport type TierConsolidationPolicy = {\r\n  /**\r\n   * Type of consolidation policy.\r\n   */\r\n  type: \"tier\";\r\n  /**\r\n   * Size below which all segments are treated as equivalent.\r\n   *\r\n   * Default: `2097152` (2 MiB)\r\n   */\r\n  segmentsBytesFloor?: number;\r\n  /**\r\n   * Maximum allowed size of all consolidation segments.\r\n   *\r\n   * Default: `5368709120` (5 GiB)\r\n   */\r\n  segmentsBytesMax?: number;\r\n  /**\r\n   * Maximum number of segments that are evaluated as candidates for\r\n   * consolidation.\r\n   *\r\n   * Default: `10`\r\n   */\r\n  segmentsMax?: number;\r\n  /**\r\n   * Minimum number of segments that are evaluated as candidates for\r\n   * consolidation.\r\n   *\r\n   * Default: `1`\r\n   */\r\n  segmentsMin?: number;\r\n  /**\r\n   * Consolidation candidates with a score less than this value will be\r\n   * filtered out.\r\n   *\r\n   * Default: `0`\r\n   */\r\n  minScore?: number;\r\n};\r\n\r\n/**\r\n * Type of a View.\r\n */\r\nexport type ViewType = ViewDescription[\"type\"];\r\n//#endregion\r\n\r\n//#region CreateViewOptions\r\n/**\r\n * Options for creating a View.\r\n */\r\nexport type CreateViewOptions =\r\n  | CreateArangoSearchViewOptions\r\n  | CreateSearchAliasViewOptions;\r\n\r\n/**\r\n * Shared attributes of all View creation options.\r\n */\r\nexport type CreateViewOptionsType<Type extends ViewType, extra extends {}> = {\r\n  /**\r\n   * Type of the View.\r\n   */\r\n  type: Type;\r\n} & extra;\r\n\r\n/**\r\n * Options for creating an ArangoSearch View.\r\n */\r\nexport type CreateArangoSearchViewOptions = CreateViewOptionsType<\r\n  \"arangosearch\",\r\n  ArangoSearchViewPropertiesOptions & {\r\n    /**\r\n     * Maximum number of writers cached in the pool.\r\n     *\r\n     * Default: `64`\r\n     */\r\n    writebufferIdle?: number;\r\n    /**\r\n     * Maximum number of concurrent active writers that perform a transaction.\r\n     *\r\n     * Default: `0`\r\n     */\r\n    writebufferActive?: number;\r\n    /**\r\n     * Maximum memory byte size per writer before a writer flush is triggered.\r\n     *\r\n     * Default: `33554432` (32 MiB)\r\n     */\r\n    writebufferSizeMax?: number;\r\n    /**\r\n     * Attribute path (`field`) for the value of each document that will be\r\n     * used for sorting.\r\n     *\r\n     * If `direction` is set to `\"asc\"` or `asc` is set to `true`,\r\n     * the primary sorting order will be ascending.\r\n     *\r\n     * If `direction` is set to `\"desc\"` or `asc` is set to `false`,\r\n     * the primary sorting order will be descending.\r\n     */\r\n    primarySort?: CreateArangoSearchViewPrimarySortOptions[];\r\n    /**\r\n     * Compression to use for the primary sort data.\r\n     *\r\n     * Default: `\"lz4\"`\r\n     */\r\n    primarySortCompression?: Compression;\r\n    /**\r\n     * (Enterprise Edition only.) If set to `true`, then primary sort columns\r\n     * will always be cached in memory.\r\n     *\r\n     * Default: `false`\r\n     */\r\n    primarySortCache?: boolean;\r\n    /**\r\n     * (Enterprise Edition only.) If set to `true`, then primary key columns\r\n     * will always be cached in memory.\r\n     *\r\n     * Default: `false`\r\n     */\r\n    primaryKeyCache?: boolean;\r\n    /**\r\n     * Attribute paths for which values should be stored in the view index\r\n     * in addition to those used for sorting via `primarySort`.\r\n     */\r\n    storedValues?:\r\n      | CreateArangoSearchViewStoredValueOptions[]\r\n      | string[]\r\n      | string[][];\r\n    /**\r\n     * An array of strings defining sort expressions to optimize.\r\n     */\r\n    optimizeTopK?: string[];\r\n  }\r\n>;\r\n\r\n/**\r\n * Options for creating a primary sort in an ArangoSearch View.\r\n */\r\nexport type CreateArangoSearchViewPrimarySortOptions =\r\n  | {\r\n      /**\r\n       * Attribute path for the value of each document to use for\r\n       * sorting.\r\n       */\r\n      field: string;\r\n      /**\r\n       * If set to `\"asc\"`, the primary sorting order will be ascending.\r\n       * If set to `\"desc\"`, the primary sorting order will be descending.\r\n       */\r\n      direction: Direction;\r\n    }\r\n  | {\r\n      /**\r\n       * Attribute path for the value of each document to use for\r\n       * sorting.\r\n       */\r\n      field: string;\r\n      /**\r\n       * If set to `true`, the primary sorting order will be ascending.\r\n       * If set to `false`, the primary sorting order will be descending.\r\n       */\r\n      asc: boolean;\r\n    };\r\n\r\n/**\r\n * Options for creating a stored value in an ArangoSearch View.\r\n */\r\nexport interface CreateArangoSearchViewStoredValueOptions {\r\n  /**\r\n   * Attribute paths for which values should be stored in the view index\r\n   * in addition to those used for sorting via `primarySort`.\r\n   */\r\n  fields: string[];\r\n  /**\r\n   * How the attribute values should be compressed.\r\n   *\r\n   * Default: `\"lz4\"`\r\n   */\r\n  compression?: Compression;\r\n  /**\r\n   * (Enterprise Edition only.) If set to `true`, then stored values will\r\n   * always be cached in memory.\r\n   *\r\n   * Default: `false`\r\n   */\r\n  cache?: boolean;\r\n}\r\n\r\n/**\r\n * Options for creating a SearchAlias View.\r\n */\r\nexport type CreateSearchAliasViewOptions = CreateViewOptionsType<\r\n  \"search-alias\",\r\n  SearchAliasViewPropertiesOptions\r\n>;\r\n//#endregion\r\n\r\n//#region UpdateViewPropertiesOptions\r\n/**\r\n * Options for partially modifying a View's properties.\r\n */\r\nexport type UpdateViewPropertiesOptions =\r\n  | UpdateArangoSearchViewPropertiesOptions\r\n  | UpdateSearchAliasViewPropertiesOptions;\r\n\r\n/**\r\n * Options for partially modifying the properties of an ArangoSearch View.\r\n */\r\nexport type UpdateArangoSearchViewPropertiesOptions =\r\n  ArangoSearchViewPropertiesOptions;\r\n\r\n/**\r\n * Options for partially modifying the properties of a SearchAlias View.\r\n */\r\nexport type UpdateSearchAliasViewPropertiesOptions = {\r\n  /**\r\n   * An array of inverted indexes to add to the View.\r\n   */\r\n  indexes: UpdateSearchAliasViewIndexOptions[];\r\n};\r\n\r\n/**\r\n * Options defining an index to be modified in a SearchAlias View.\r\n */\r\nexport type UpdateSearchAliasViewIndexOptions = SearchAliasViewIndexOptions & {\r\n  /**\r\n   * Whether to add or remove the index.\r\n   *\r\n   * Default: `\"add\"`\r\n   */\r\n  operation?: \"add\" | \"del\";\r\n};\r\n\r\n//#endregion\r\n\r\n//#region ViewPropertiesOptions\r\n/**\r\n * Options for replacing a View's properties.\r\n */\r\nexport type ViewPropertiesOptions =\r\n  | ArangoSearchViewPropertiesOptions\r\n  | SearchAliasViewPropertiesOptions;\r\n\r\n/**\r\n * Options for modifying the properties of an ArangoSearch View.\r\n */\r\nexport type ArangoSearchViewPropertiesOptions = {\r\n  /**\r\n   * How many commits to wait between removing unused files.\r\n   *\r\n   * Default: `2`\r\n   */\r\n  cleanupIntervalStep?: number;\r\n  /**\r\n   * How long to wait between applying the `consolidationPolicy`.\r\n   *\r\n   * Default: `10000`\r\n   */\r\n  consolidationIntervalMsec?: number;\r\n  /**\r\n   * How long to wait between commiting View data store changes and making\r\n   * documents visible to queries.\r\n   *\r\n   * Default: `1000`\r\n   */\r\n  commitIntervalMsec?: number;\r\n  /**\r\n   * Consolidation policy to apply for selecting which segments should be\r\n   * merged.\r\n   *\r\n   * Default: `{ type: \"tier\" }`\r\n   */\r\n  consolidationPolicy?: TierConsolidationPolicy;\r\n  /**\r\n   * An object mapping names of linked collections to\r\n   * {@link ArangoSearchViewLinkOptions} definitions.\r\n   */\r\n  links?: Record<string, Omit<ArangoSearchViewLinkOptions, \"nested\">>;\r\n};\r\n\r\n/**\r\n * A link definition for an ArangoSearch View.\r\n */\r\nexport type ArangoSearchViewLinkOptions = {\r\n  /**\r\n   * A list of names of Analyzers to apply to values of processed document\r\n   * attributes.\r\n   *\r\n   * Default: `[\"identity\"]`\r\n   */\r\n  analyzers?: string[];\r\n  /**\r\n   * An object mapping names of attributes to process for each document to\r\n   * {@link ArangoSearchViewLinkOptions} definitions.\r\n   */\r\n  fields?: Record<string, ArangoSearchViewLinkOptions>;\r\n  /**\r\n   * If set to `true`, all document attributes will be processed, otherwise\r\n   * only the attributes in `fields` will be processed.\r\n   *\r\n   * Default: `false`\r\n   */\r\n  includeAllFields?: boolean;\r\n  /**\r\n   * (Enterprise Edition only.) An object mapping attribute names to\r\n   * {@link ArangoSearchViewLinkOptions} definitions to index sub-objects\r\n   * stored in an array.\r\n   */\r\n  nested?: Record<string, ArangoSearchViewLinkOptions>;\r\n  /**\r\n   * If set to `true`, the position of values in array values will be tracked,\r\n   * otherwise all values in an array will be treated as equal alternatives.\r\n   */\r\n  trackListPositions?: boolean;\r\n  /**\r\n   * Controls how the view should keep track of the attribute values.\r\n   *\r\n   * Default: `\"none\"`\r\n   */\r\n  storeValues?: \"none\" | \"id\";\r\n  /**\r\n   * If set to `true`, then no exclusive lock is used on the source collection\r\n   * during View index creation, so that it remains basically available.\r\n   *\r\n   * Default: `false`\r\n   */\r\n  inBackground?: boolean;\r\n  /**\r\n   * (Enterprise Edition only.) If set to `true`, then field normalization\r\n   * values will always be cached in memory.\r\n   *\r\n   * Default: `false`\r\n   */\r\n  cache?: boolean;\r\n};\r\n\r\n/**\r\n * Options for modifying the properties of a SearchAlias View.\r\n */\r\nexport type SearchAliasViewPropertiesOptions = {\r\n  /**\r\n   * An array of inverted indexes to add to the View.\r\n   */\r\n  indexes: SearchAliasViewIndexOptions[];\r\n};\r\n\r\n/**\r\n * Options defining an index used in a SearchAlias View.\r\n */\r\nexport type SearchAliasViewIndexOptions = {\r\n  /**\r\n   *  Name of a collection.\r\n   */\r\n  collection: string;\r\n  /**\r\n   * Name of an inverted index in the collection.\r\n   */\r\n  index: string;\r\n};\r\n//#endregion\r\n\r\n//#region ViewDescription\r\nexport type ViewDescription =\r\n  | ArangoSearchViewDescription\r\n  | SearchAliasViewDescription;\r\n\r\n/**\r\n * Generic description of a View.\r\n */\r\nexport type ViewDescriptionType<Type extends string> = {\r\n  /**\r\n   * Type of the View.\r\n   */\r\n  type: Type;\r\n  /**\r\n   * A globally unique identifier for this View.\r\n   */\r\n  globallyUniqueId: string;\r\n  /**\r\n   * An identifier for this View.\r\n   */\r\n  id: string;\r\n  /**\r\n   * Name of the View.\r\n   */\r\n  name: string;\r\n};\r\n\r\nexport type ArangoSearchViewDescription = ViewDescriptionType<\"arangosearch\">;\r\n\r\nexport type SearchAliasViewDescription = ViewDescriptionType<\"search-alias\">;\r\n//#endregion\r\n\r\n//#region ViewProperties\r\nexport type ViewProperties =\r\n  | ArangoSearchViewProperties\r\n  | SearchAliasViewProperties;\r\n\r\n/**\r\n * Properties of an ArangoSearch View.\r\n */\r\nexport type ArangoSearchViewProperties = ArangoSearchViewDescription & {\r\n  cleanupIntervalStep: number;\r\n  consolidationIntervalMsec: number;\r\n  commitIntervalMsec: number;\r\n  writebufferIdle: number;\r\n  writebufferActive: number;\r\n  writebufferSizeMax: number;\r\n  consolidationPolicy: TierConsolidationPolicy | BytesAccumConsolidationPolicy;\r\n  primarySort: {\r\n    field: string;\r\n    direction: Direction;\r\n  }[];\r\n  primarySortCompression: Compression;\r\n  primarySortCache: boolean;\r\n  primaryKeyCache: boolean;\r\n  storedValues: {\r\n    fields: string[];\r\n    compression: Compression;\r\n    cache: boolean;\r\n  }[];\r\n  links: Record<string, Omit<ArangoSearchViewLink, \"nested\">>;\r\n  optimizeTopK: string[];\r\n};\r\n\r\n/**\r\n * A link definition for an ArangoSearch View.\r\n */\r\nexport type ArangoSearchViewLink = {\r\n  analyzers: string[];\r\n  fields: Record<string, ArangoSearchViewLink>;\r\n  includeAllFields: boolean;\r\n  nested?: Record<string, ArangoSearchViewLink>;\r\n  trackListPositions: boolean;\r\n  storeValues: \"none\" | \"id\";\r\n  cache: boolean;\r\n};\r\n\r\n/**\r\n * Properties of a SearchAlias View.\r\n */\r\nexport type SearchAliasViewProperties = SearchAliasViewDescription & {\r\n  indexes: { collection: string; index: string }[];\r\n};\r\n//#endregion\r\n\r\n//#region View class\r\n/**\r\n * Indicates whether the given value represents a {@link View}.\r\n *\r\n * @param view - A value that might be a View.\r\n */\r\nexport function isArangoView(view: any): view is View {\r\n  return Boolean(view && view.isArangoView);\r\n}\r\n\r\n// Note: Resist the urge to attempt to create separate ArangoSearchView\r\n// and SearchAliasView classes or interfaces. The requirements for producing\r\n// a meaningful typedoc documentation, providing a nice API in the `Database`\r\n// class and having these as separate interfaces seem to be mutually\r\n// incompatible.\r\n\r\n/**\r\n * Represents a View in a {@link databases.Database}.\r\n */\r\nexport class View {\r\n  protected _name: string;\r\n  protected _db: databases.Database;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  constructor(db: databases.Database, name: string) {\r\n    this._db = db;\r\n    this._name = name;\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   *\r\n   * Indicates that this object represents an ArangoDB View.\r\n   */\r\n  get isArangoView(): true {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Database this view belongs to.\r\n   */\r\n  get database() {\r\n    return this._db;\r\n  }\r\n\r\n  /**\r\n   * Name of the View.\r\n   */\r\n  get name() {\r\n    return this._name;\r\n  }\r\n\r\n  /**\r\n   * Retrieves general information about the View.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * const db = new Database();\r\n   * const view = db.view(\"some-view\");\r\n   * const data = await view.get();\r\n   * // data contains general information about the View\r\n   * ```\r\n   */\r\n  get(): Promise<connections.ArangoApiResponse<ViewDescription>> {\r\n    return this._db.request({\r\n      pathname: `/_api/view/${encodeURIComponent(this._name)}`,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Checks whether the View exists.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * const db = new Database();\r\n   * const view = db.view(\"some-view\");\r\n   * const exists = await view.exists();\r\n   * console.log(exists); // indicates whether the View exists\r\n   * ```\r\n   */\r\n  async exists(): Promise<boolean> {\r\n    try {\r\n      await this.get();\r\n      return true;\r\n    } catch (err: any) {\r\n      if (errors.isArangoError(err) && err.errorNum === VIEW_NOT_FOUND) {\r\n        return false;\r\n      }\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates a View with the given `options` and the instance's name.\r\n   *\r\n   * See also {@link databases.Database#createView}.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * const db = new Database();\r\n   * const view = db.view(\"potatoes\");\r\n   * await view.create();\r\n   * // the ArangoSearch View \"potatoes\" now exists\r\n   * ```\r\n   */\r\n  create<Options extends CreateViewOptions>(\r\n    options: CreateViewOptions\r\n  ): Promise<\r\n    typeof options extends CreateArangoSearchViewOptions\r\n      ? ArangoSearchViewDescription\r\n      : Options extends CreateSearchAliasViewOptions\r\n        ? SearchAliasViewDescription\r\n        : ViewDescription\r\n  > {\r\n    return this._db.request({\r\n      method: \"POST\",\r\n      pathname: \"/_api/view\",\r\n      body: {\r\n        ...options,\r\n        name: this._name,\r\n      },\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Renames the View and updates the instance's `name` to `newName`.\r\n   *\r\n   * Additionally removes the instance from the {@link databases.Database}'s\r\n   * internal cache.\r\n   *\r\n   * **Note**: Renaming Views may not be supported when ArangoDB is\r\n   * running in a cluster configuration.\r\n   *\r\n   * @param newName - The new name of the View.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * const db = new Database();\r\n   * const view1 = db.view(\"some-view\");\r\n   * await view1.rename(\"other-view\");\r\n   * const view2 = db.view(\"some-view\");\r\n   * const view3 = db.view(\"other-view\");\r\n   * // Note all three View instances are different objects but\r\n   * // view1 and view3 represent the same ArangoDB view!\r\n   * ```\r\n   */\r\n  async rename(\r\n    newName: string\r\n  ): Promise<connections.ArangoApiResponse<ViewDescription>> {\r\n    const result = this._db.renameView(this._name, newName);\r\n    this._name = newName;\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Retrieves the View's properties.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * const db = new Database();\r\n   * const view = db.view(\"some-view\");\r\n   * const data = await view.properties();\r\n   * // data contains the View's properties\r\n   * ```\r\n   */\r\n  properties(): Promise<connections.ArangoApiResponse<ViewProperties>> {\r\n    return this._db.request({\r\n      pathname: `/_api/view/${encodeURIComponent(this._name)}/properties`,\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Updates the properties of the View.\r\n   *\r\n   * @param properties - Properties of the View to update.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * const db = new Database();\r\n   * const view = db.view(\"some-view\");\r\n   * const result = await view.updateProperties({\r\n   *   consolidationIntervalMsec: 234\r\n   * });\r\n   * console.log(result.consolidationIntervalMsec); // 234\r\n   * ```\r\n   */\r\n  updateProperties<Properties extends UpdateViewPropertiesOptions | undefined>(\r\n    properties?: Properties\r\n  ): Promise<\r\n    Properties extends UpdateArangoSearchViewPropertiesOptions\r\n      ? ArangoSearchViewProperties\r\n      : Properties extends UpdateSearchAliasViewPropertiesOptions\r\n        ? SearchAliasViewProperties\r\n        : ViewProperties\r\n  > {\r\n    return this._db.request({\r\n      method: \"PATCH\",\r\n      pathname: `/_api/view/${encodeURIComponent(this._name)}/properties`,\r\n      body: properties ?? {},\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Replaces the properties of the View.\r\n   *\r\n   * @param properties - New properties of the View.\r\n   *\r\n   * @example\r\n   * ```js\r\n   * const db = new Database();\r\n   * const view = db.view(\"some-view\");\r\n   * const result = await view.replaceProperties({\r\n   *   consolidationIntervalMsec: 234\r\n   * });\r\n   * console.log(result.consolidationIntervalMsec); // 234\r\n   * ```\r\n   */\r\n  replaceProperties<Properties extends ViewPropertiesOptions | undefined>(\r\n    properties?: Properties\r\n  ): Promise<\r\n    Properties extends ArangoSearchViewPropertiesOptions\r\n      ? ArangoSearchViewProperties\r\n      : Properties extends SearchAliasViewPropertiesOptions\r\n        ? SearchAliasViewProperties\r\n        : ViewProperties\r\n  > {\r\n    return this._db.request({\r\n      method: \"PUT\",\r\n      pathname: `/_api/view/${encodeURIComponent(this._name)}/properties`,\r\n      body: properties ?? {},\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deletes the View from the database.\r\n   *\r\n   * @example\r\n   *\r\n   * ```js\r\n   * const db = new Database();\r\n   * const view = db.view(\"some-view\");\r\n   * await view.drop();\r\n   * // the View \"some-view\" no longer exists\r\n   * ```\r\n   */\r\n  drop(): Promise<boolean> {\r\n    return this._db.request(\r\n      {\r\n        method: \"DELETE\",\r\n        pathname: `/_api/view/${encodeURIComponent(this._name)}`,\r\n      },\r\n      (res) => res.parsedBody.result\r\n    );\r\n  }\r\n}\r\n//#endregion\r\n"]}