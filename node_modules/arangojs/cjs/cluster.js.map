{"version":3,"file":"cluster.js","sourceRoot":"","sources":["../../src/cluster.ts"],"names":[],"mappings":";AAAA;;;;;;;;GAQG;;AAiLH,YAAY","sourcesContent":["/**\r\n * ```ts\r\n * import type { ClusterImbalanceInfo } from \"arangojs/cluster\";\r\n * ```\r\n *\r\n * The \"cluster\" module provides types for cluster management.\r\n *\r\n * @packageDocumentation\r\n */\r\n\r\n//#region Cluster operation options\r\n/**\r\n * Options for rebalancing the cluster.\r\n */\r\nexport type ClusterRebalanceOptions = {\r\n  /**\r\n   * Maximum number of moves to be computed.\r\n   *\r\n   * Default: `1000`\r\n   */\r\n  maximumNumberOfMoves?: number;\r\n  /**\r\n   * Allow leader changes without moving data.\r\n   *\r\n   * Default: `true`\r\n   */\r\n  leaderChanges?: boolean;\r\n  /**\r\n   * Allow moving leaders.\r\n   *\r\n   * Default: `false`\r\n   */\r\n  moveLeaders?: boolean;\r\n  /**\r\n   * Allow moving followers.\r\n   *\r\n   * Default: `false`\r\n   */\r\n  moveFollowers?: boolean;\r\n  /**\r\n   * Ignore system collections in the rebalance plan.\r\n   *\r\n   * Default: `false`\r\n   */\r\n  excludeSystemCollections?: boolean;\r\n  /**\r\n   * Default: `256**6`\r\n   */\r\n  piFactor?: number;\r\n  /**\r\n   * A list of database names to exclude from the analysis.\r\n   *\r\n   * Default: `[]`\r\n   */\r\n  databasesExcluded?: string[];\r\n};\r\n//#endregion\r\n\r\n//#region Cluster operation results\r\n/**\r\n * The result of a cluster rebalance.\r\n */\r\nexport type ClusterRebalanceResult = {\r\n  /**\r\n   * Imbalance before the suggested move shard operations are applied.\r\n   */\r\n  imbalanceBefore: ClusterImbalanceInfo;\r\n  /**\r\n   * Expected imbalance after the suggested move shard operations are applied.\r\n   */\r\n  imbalanceAfter: ClusterImbalanceInfo;\r\n  /**\r\n   * Suggested move shard operations.\r\n   */\r\n  moves: ClusterRebalanceMove[];\r\n};\r\n\r\n/**\r\n * Information about the current state of the cluster imbalance.\r\n */\r\nexport type ClusterRebalanceState = ClusterImbalanceInfo & {\r\n  /**\r\n   * The number of pending move shard operations.\r\n   */\r\n  pendingMoveShards: number;\r\n  /**\r\n   * The number of planned move shard operations.\r\n   */\r\n  todoMoveShards: number;\r\n};\r\n\r\n/**\r\n * Information about a cluster imbalance.\r\n */\r\nexport type ClusterImbalanceInfo = {\r\n  /**\r\n   * Information about the leader imbalance.\r\n   */\r\n  leader: {\r\n    /**\r\n     * The weight of leader shards per DB-Server. A leader has a weight of 1 by default but it is higher if collections can only be moved together because of `distributeShardsLike`.\r\n     */\r\n    weightUsed: number[];\r\n    /**\r\n     * The ideal weight of leader shards per DB-Server.\r\n     */\r\n    targetWeight: number[];\r\n    /**\r\n     * The number of leader shards per DB-Server.\r\n     */\r\n    numberShards: number[];\r\n    /**\r\n     * The measure of the leader shard distribution. The higher the number, the worse the distribution.\r\n     */\r\n    leaderDupl: number[];\r\n    /**\r\n     * The sum of all weights.\r\n     */\r\n    totalWeight: number;\r\n    /**\r\n     * The measure of the total imbalance. A high value indicates a high imbalance.\r\n     */\r\n    imbalance: number;\r\n    /**\r\n     * The sum of shards, counting leader shards only.\r\n     */\r\n    totalShards: number;\r\n  };\r\n  /**\r\n   * Information about the shard imbalance.\r\n   */\r\n  shards: {\r\n    /**\r\n     * The size of shards per DB-Server.\r\n     */\r\n    sizeUsed: number[];\r\n    /**\r\n     * The ideal size of shards per DB-Server.\r\n     */\r\n    targetSize: number[];\r\n    /**\r\n     * The number of leader and follower shards per DB-Server.\r\n     */\r\n    numberShards: number[];\r\n    /**\r\n     * The sum of the sizes.\r\n     */\r\n    totalUsed: number;\r\n    /**\r\n     * The sum of shards, counting leader and follower shards.\r\n     */\r\n    totalShards: number;\r\n    /**\r\n     * The sum of system collection shards, counting leader shards only.\r\n     */\r\n    totalShardsFromSystemCollections: number;\r\n    /**\r\n     * The measure of the total imbalance. A high value indicates a high imbalance.\r\n     */\r\n    imbalance: number;\r\n  };\r\n};\r\n\r\nexport type ClusterRebalanceMove = {\r\n  /**\r\n   * The server name from which to move.\r\n   */\r\n  from: string;\r\n  /**\r\n   * The ID of the destination server.\r\n   */\r\n  to: string;\r\n  /**\r\n   * Shard ID of the shard to be moved.\r\n   */\r\n  shard: string;\r\n  /**\r\n   * Collection ID of the collection the shard belongs to.\r\n   */\r\n  collection: number;\r\n  /**\r\n   * True if this is a leader move shard operation.\r\n   */\r\n  isLeader: boolean;\r\n};\r\n//#endregion\r\n"]}