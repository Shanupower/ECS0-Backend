name: Deploy ECS Application

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # Allow manual deployment

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm install
        cd ECS0 && npm install
        
    - name: Build frontend
      run: |
        cd ECS0 && npm run build
        
    - name: Deploy to server
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      env:
        HOST: ${{ secrets.H_host }}
        USERNAME: ${{ secrets.H_username }}
        KEY: ${{ secrets.H_ssh_key }}
      run: |
        # Install SSH client
        sudo apt-get update
        sudo apt-get install -y openssh-client
        
        # Setup SSH key
        mkdir -p ~/.ssh
        echo "$KEY" | tr -d '\r' > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H $HOST >> ~/.ssh/known_hosts
        
        # Test SSH connection
        echo "ðŸ”‘ Testing SSH connection..."
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no $USERNAME@$HOST "echo 'SSH connection successful'"
        
        # Deploy using the deployment script on server
        echo "ðŸš€ Starting deployment on server..."
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no $USERNAME@$HOST "sudo -i /root/deploy-server.sh"
        
        # Verify deployment
        echo "âœ… Verifying deployment..."
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no $USERNAME@$HOST "sudo -i pm2 status"
        
        echo "ðŸŽ‰ Deployment completed successfully!"
